version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: aicapital-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: aicapital
    volumes:
      - mongodb_data:/data/db
      - ./scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - aicapital-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: aicapital-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redispassword
    volumes:
      - redis_data:/data
    networks:
      - aicapital-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: aicapital-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/aicapital?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      JWT_SECRET: your-jwt-secret-change-in-production
      SESSION_SECRET: your-session-secret-change-in-production
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      FINNHUB_API_KEY: ${FINNHUB_API_KEY}
      ALPHA_VANTAGE_API_KEY: ${ALPHA_VANTAGE_API_KEY}
      FINANCIAL_MODELING_PREP_API_KEY: ${FINANCIAL_MODELING_PREP_API_KEY}
      SENTRY_DSN: ${SENTRY_DSN}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
    depends_on:
      - mongodb
      - redis
    networks:
      - aicapital-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Development Backend (for local development)
  backend-dev:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: aicapital-backend-dev
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      MONGODB_URI: mongodb://admin:password@mongodb:27017/aicapital?authSource=admin
      REDIS_URL: redis://:redispassword@redis:6379
      JWT_SECRET: dev-jwt-secret
      SESSION_SECRET: dev-session-secret
    depends_on:
      - mongodb
      - redis
    networks:
      - aicapital-network
    volumes:
      - ./backend:/app
      - /app/node_modules
    profiles:
      - dev

  # Development Frontend (for local development)
  frontend-dev:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: aicapital-frontend-dev
    restart: unless-stopped
    ports:
      - "3002:3000"
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    depends_on:
      - backend-dev
    networks:
      - aicapital-network
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  aicapital-network:
    driver: bridge